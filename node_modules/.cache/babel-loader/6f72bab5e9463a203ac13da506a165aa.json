{"ast":null,"code":"import _toConsumableArray from\"/Users/tiberiu/Documents/web-projects/learningJS/TheOdinProject/memory-card/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/tiberiu/Documents/web-projects/learningJS/TheOdinProject/memory-card/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import uniqid from'uniqid';import Card from'./components/Card';import Navigation from'./components/Navigation';import{useState}from'react';import GameOver from'./components/GameOver';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var initalCards=[{title:\"Quattro Stagioni\",imgSource:\"quattroStagioni\",id:uniqid()},{title:\"Quattro Formagi\",imgSource:\"quattroFormagi\",id:uniqid()},{title:\"Fish Pizza\",imgSource:\"fishPizza\",id:uniqid()},{title:\"Pepperoni Pizza\",imgSource:\"pepperoniPizza\",id:uniqid()},{title:\"Italian Pizza\",imgSource:\"italianPizza\",id:uniqid()},{title:\"Low Res Pizza\",imgSource:\"lowResPizza\",id:uniqid()},{title:\"Toxic Pizza\",imgSource:\"toxicPizza\",id:uniqid()},{title:\"Onion Pizza\",imgSource:\"onionPizza\",id:uniqid()}];var _useState=useState(initalCards),_useState2=_slicedToArray(_useState,2),cards=_useState2[0],setCards=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cardsClicked=_useState4[0],setCardsClicked=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),score=_useState6[0],setScore=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isGameOver=_useState8[0],setIsGameOver=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),bestScoreList=_useState10[0],setBestScoreList=_useState10[1];var cardClicked=function cardClicked(card){if(cardsClicked.includes(card)){console.log('Game over');gameOver();return;//TODO: Game over here!\n}setCardsClicked(_toConsumableArray(cardsClicked).concat(card));setScore(score+1);setCards(_toConsumableArray(cards).sort(function(a,b){return 0.5-Math.random();}));};var newGame=function newGame(){setIsGameOver(false);setCards(initalCards);setCardsClicked([]);setScore(0);};var gameOver=function gameOver(){setCards([]);setIsGameOver(true);if(Math.max.apply(Math,_toConsumableArray(bestScoreList))>score){return;}else{setBestScoreList(_toConsumableArray(bestScoreList).concat(score));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Navigation,{score:score,bestScoreList:bestScoreList}),isGameOver?/*#__PURE__*/_jsx(GameOver,{newGame:newGame}):null,/*#__PURE__*/_jsx(\"div\",{id:\"mainContainer\",children:cards.map(function(card){return/*#__PURE__*/_jsx(Card,{title:card.title,imgSource:card.imgSource,cardClicked:cardClicked},card.id);})})]});}export default App;","map":{"version":3,"sources":["/Users/tiberiu/Documents/web-projects/learningJS/TheOdinProject/memory-card/src/App.js"],"names":["uniqid","Card","Navigation","useState","GameOver","App","initalCards","title","imgSource","id","cards","setCards","cardsClicked","setCardsClicked","score","setScore","isGameOver","setIsGameOver","bestScoreList","setBestScoreList","cardClicked","card","includes","console","log","gameOver","concat","sort","a","b","Math","random","newGame","max","map"],"mappings":"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","sourcesContent":["import './App.css';\nimport uniqid from 'uniqid'\nimport Card from './components/Card';\nimport Navigation from './components/Navigation';\nimport { useState } from 'react';\nimport GameOver from './components/GameOver';\n\nfunction App() {\n  const initalCards = [\n    {title: \"Quattro Stagioni\", imgSource: \"quattroStagioni\", id: uniqid()},\n    {title: \"Quattro Formagi\", imgSource: \"quattroFormagi\", id: uniqid()},\n    {title: \"Fish Pizza\", imgSource: \"fishPizza\", id: uniqid()},\n    {title: \"Pepperoni Pizza\", imgSource: \"pepperoniPizza\", id: uniqid()},\n    {title: \"Italian Pizza\", imgSource: \"italianPizza\", id: uniqid()},\n    {title: \"Low Res Pizza\", imgSource: \"lowResPizza\", id: uniqid()},\n    {title: \"Toxic Pizza\", imgSource: \"toxicPizza\", id: uniqid()},\n    {title: \"Onion Pizza\", imgSource: \"onionPizza\", id: uniqid()},\n  ]\n  const [cards, setCards] = useState(initalCards);\n\n  const [cardsClicked, setCardsClicked] = useState([]);\n  const [score, setScore] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [bestScoreList, setBestScoreList] = useState([]);\n\n  const cardClicked = (card) => {\n    if(cardsClicked.includes(card)) {\n      console.log('Game over');\n      gameOver();\n      return; //TODO: Game over here!\n    }\n    setCardsClicked([...cardsClicked].concat(card))\n    setScore(score + 1);\n\n    setCards(\n      [...cards].sort((a,b) => 0.5 - Math.random())\n    )\n    \n  }\n\n  const newGame = () => {\n    setIsGameOver(false);\n    setCards(initalCards);\n    setCardsClicked([]);\n    setScore(0);\n  }\n\n  const gameOver = () => {\n    setCards([]);\n    setIsGameOver(true);\n\n    if(Math.max(...bestScoreList) > score) {\n      return;\n    } else {\n      setBestScoreList([...bestScoreList].concat(score));\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Navigation score={score} bestScoreList={bestScoreList}/>\n      {isGameOver ? <GameOver newGame={newGame}/> : null}\n      <div id=\"mainContainer\">\n          {\n            cards.map(card =>  <Card key={card.id} title={card.title} imgSource={card.imgSource} cardClicked={cardClicked}/>)\n          }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}